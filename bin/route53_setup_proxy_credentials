#!/bin/bash
#
# This helper script should be sourced to setup a local environment
#  where you can use AWS assumed credentials to execute commands,
#   in particular for the aws CLI.
#

if [ "x" = "x${AWS_ROLE_ARN}" ]; then
	echo "Please set the AWS_ROLE_ARN environment variable to the role you wish to assume."
	exit 1
fi
if [ "x" = "x${AWS_STS_EXTERNAL_ID}" ]; then
	echo "Please set the AWS_STS_EXTERNAL_ID environment variable to the value created for STS."
	exit 1
fi

#Helper function to parse JSON results
parse_credential_values() {
	python -c "import sys, json; print json.load(sys.stdin)[\"Credentials\"][\"$1\"]"
}

#
# Get a temporary session token, parse it out, and setup our ENV
#
ASSUMED_ROLE_DATA=$(  aws \
	--profile nephoeng \
	sts assume-role \
	--role-arn ${AWS_ROLE_ARN} \
	--role-session-name test-route53-role \
	--external-id ${AWS_STS_EXTERNAL_ID} )

AWS_ACCESS_KEY_ID=$(echo ${ASSUMED_ROLE_DATA}     | parse_credential_values AccessKeyId )
AWS_SECRET_ACCESS_KEY=$(echo ${ASSUMED_ROLE_DATA} | parse_credential_values SecretAccessKey )
AWS_SECURITY_TOKEN=$(echo ${ASSUMED_ROLE_DATA}    | parse_credential_values SessionToken )
export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SECURITY_TOKEN



